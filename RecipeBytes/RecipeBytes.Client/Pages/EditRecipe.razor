@page "/editrecipe/{Id:guid}"
@page "/createrecipe"
@inject NavigationManager Navigator

@rendermode InteractiveWebAssembly



<h3>Create A New Recipe</h3>
<div class="card">
    <div class="card-body">
        <EditForm Model="Model" OnSubmit="Submit">
            <div class="row">
                <div class="col">
                    <label class="form-label">@nameof(Model.Name)</label>
                    <InputText class="form-control" @bind-Value="Model!.Name" />
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <label class="form-label">@nameof(Model.Description)</label>
                    <InputText class="form-control" @bind-Value="Model!.Description" />
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <label class="form-label">@nameof(Model.ImageUrl)</label>
                    <InputText class="form-control" @bind-Value="Model!.ImageUrl" />
                </div>
            </div>

            <div class="row">
                <div class="col">
                    @if (allIngredients?.Count > 0)
                    {
                        <label class="form-label">@nameof(Model.Ingredients)</label>
                        <div class="list-group">
                            @foreach(var ingredient in allIngredients)
                            {
                                if (selectedIngredients.Contains(ingredient.Id))
                                {
                                    <button type="button" class="list-group-item list-group-item-action active" @onclick="() => DeSelectIngredient(ingredient.Id)">@ingredient.Name</button>
                                } else
                                {
                                    <button type="button" class="list-group-item list-group-item-action" @onclick="() => SelectIngredient(ingredient.Id)">@ingredient.Name</button>
                                }
                            }
                        </div>
                    }
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <label class="form-label">@nameof(Model.InstructionSteps)</label>
                    <InputText @bind-Value="NewInstruction"></InputText>
                    <button type="button" class="btn btn-secondary" @onclick="AddInstruction">Add New</button>
                    <ul class="list-group">
                        @foreach(var instruction in Model.InstructionSteps)
                        {
                            <li class="list-group-item">@instruction</li>
                        }
                    </ul>
                </div>
            </div>

            <button type="submit" class="btn btn-success">Submit</button>  
        </EditForm>

    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public RecipeViewModel? Model { get; set; } = new();
    [Parameter]
    public Guid? Id { get; set; }


    private RestClient? _restClient { get; set; }
    private List<IngredientViewModel>? allIngredients { get; set; }
    private List<Guid> selectedIngredients { get; set; } = [];
    private string NewInstruction { get; set; } = string.Empty;


    protected override async Task OnInitializedAsync()
    {
        _restClient = new RestClient(Navigator.BaseUri);
        var request = new RestRequest("/api/ingredient");

        var response = await _restClient.GetAsync<List<IngredientViewModel>>(request);
        allIngredients = response;

        if(Id is not null)
        {
            var existingRecipeRequest = new RestRequest($"/api/recipe/{Id}");
            Model = await _restClient.GetAsync<RecipeViewModel>(existingRecipeRequest);
            selectedIngredients = Model!.Ingredients!;
        }
        //todo: make sure hightlighted ingredients from database

    }

    public void AddInstruction()
    {
        Model!.InstructionSteps.Add(NewInstruction);
        NewInstruction = string.Empty;
    }

    public void SelectIngredient(Guid id)
    {
        selectedIngredients.Add(id); 
    }

    public void DeSelectIngredient(Guid id)
    {
        selectedIngredients.Remove(id);
    }


    public async Task Submit()
    {
        var selectedList = selectedIngredients.ToList();
        Model!.Ingredients = allIngredients?.Where(x => selectedList.Contains(x.Id)).Select(x => x.Id).ToList();
        var request = new RestRequest("/api/recipe", Method.Post);
        request.AddBody(Model!);
        await _restClient!.PostAsync(request);
        Model = new();
        Id = null;
        Navigator.NavigateTo("recipelist");
    }
}
