@page "/recipedetails/{Id:guid}"

@inject NavigationManager Navigator

@using RecipeBytes.Client.ViewModels

<div class="container-md">

    <h3>Recipe Details</h3>

    @if (_recipe != null)
    {
        <div class="row">
            <h4 class="mt-3 mb-4">@_recipe.Name</h4>

            <p class="mb-5">@_recipe.Description</p>

            @if (@_recipe.ImageUrl != null)
            {
                <div class="col">
                    <img src="@_recipe.ImageUrl" />
                </div>
            }
            <div class="col">

                @if (_recipe.Ingredients != null)
                {
                    <h4 class="mb-3">Ingredients</h4>

                    <ul class="list-group list-group-flush">
                        @foreach (var ingredient in _recipe.Ingredients!)
                        {
                            var vm = allIngredients!.First(x => x.Id == ingredient);

                            <li class="list-group-item">@vm.Name</li>
                        }
                    </ul>
                }

                @if (_recipe.InstructionSteps != null)
                {
                    <h4 class="mt-5 mb-3">Directions</h4>

                    <ol class="list-group list-group-numbered">
                        @foreach (var instruction in _recipe.InstructionSteps)
                        {
                            <li class="list-group-item">@instruction</li>
                        }
                    </ol>
                }
            </div>
        </div>
    }

</div>

@code {
    private RecipeViewModel? _recipe { get; set; }
    [Parameter]
    public Guid Id { get; set; }
    private List<IngredientViewModel>? allIngredients { get; set; }


    private RestClient? _restClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _restClient = new RestClient(Navigator.BaseUri);
        var existingRecipeRequest = new RestRequest($"/api/recipe/{Id}");
        _recipe = await _restClient.GetAsync<RecipeViewModel>(existingRecipeRequest);

        var request = new RestRequest("/api/ingredient");

        var response = await _restClient.GetAsync<List<IngredientViewModel>>(request);
        allIngredients = response;
    }
}
